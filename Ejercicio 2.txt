//Creación de todos los datos
db.movies.insertMany([
    {title: "Fight Club", writer: "Chuck Palahniuk", year: 1999, actors: ["Brad Pitt", "Edward Norton"]}, 
    {title: "Pulp Fiction", writer: "Quentin Tarantino", year: 1994, actors: ["John Travolta", "Uma Thurma"]},
    {title: "Inglorious Basterds", writer: "Quentin Tarantino", year: 2009 , actors: ["Brad Pitt", "Diane Kruger", "Eli Roth"]},
    {title: "The Hobbit: An Unexpected Journey", writer: "J.R.R. Tolkien", year: 2012, franchise: "The Hobbit"},
    {title: "The Hobbit: The Desolation of Smaug", writer: "J.R.R. Tolkien", year: 2013, franchise: "The Hobbit"},
    {title: "The Hobbit: The Battle of the Five Armies", writer: "J.R.R. Tolkien", year: 2012, franchise: "The Hobbit", synopsis: "Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness"},
    {title: "Pee Wee Herman's Big Adventure"},
    {title: "Avatar"}
    ])




//Obtener todos los documentos
db.movies.find().pretty() 

//Obtener documentos con writer igual a "Quentin Tarantino"
db.movies.find({writer: "Quentin Tarantino"})

//Obtener documentos con actors que incluyan a "Brad Pitt"
db.movies.find({actors: "Brad Pitt"})

//Obtener documentos con franchise igual a "The Hobbit"
db.movies.find({franchise: "The Hobbit"})

//Obtener todas las películas de los 90s
db.movies.find({year: {$gte: 1990, $lte: 2000}})

//Obtener todas las películas estrenadas entre el año 2000 y el 2010
db.movies.find({year: {$gte: 200, $lte: 2010}})




//Agregar sinopsis a "The Hobbit: An Unexpected Journey"
db.movies.updateOne({title: "The Hobbit: An Unexpected Journey"},{$set:{synopsis: "A reluctant Hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug"}})
db.movies.find({title: "The Hobbit: An Unexpected Journey"})

//Agregar sinopsis a "The Hobbit: The Desolation of Smaug"
db.movies.updateOne({title: "The Hobbit: The Desolation of Smaug"},{$set:{synopsis: "The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring"}})
db.movies.find({title: "The Hobbit: The Desolation of Smaug"})

//Agregar un actor llamado "Samuel L.Jackson" a la película "Pulp Fiction"
db.movies.update({title: "Pulp Fiction"},{$addToSet:{actors:"Samuel L.Jackson"}})
db.movies.find({actors: "Samuel L.Jackson"})




//Encontrar las películas que en el título contengan la palabra "Hobbit"
db.movies.find({title:{$regex:"Hobbit"}})

//Encontrar las películas que en la sinopsis contengan la palabra "Gandalf"
db.movies.find({synopsis:{$regex:"Gandalf"}})

//Encontrar las películas que en la sinopsis contengan la palabra "Bilbo" y no la palabra "Gandalf"
db.movies.find({$and:[{synopsis:{$regex:"Bilbo"}},{synopsis:{$not:{$regex:"Gandalf"}}}]})

//Encontrar las películas que en la sinopsis contengan la palabra "dwarves" ó "hobbit"
db.movies.find({$or:[{synopsis:{$regex:"dwarves"}},{synopsis:{$regex:"hobbit"}}]})

//Encontrar las películas que en la sinopsis contengan la palabra "gold" y "dragon"
db.movies.find({$and:[{synopsis:{$regex:"gold"}},{synopsis:{$regex:"dragon"}}]})




//Eliminar la película "Pee Wee Herman's Big Adventure"
db.movies.deleteOne({title:"Pee Wee Herman's Big Adventure"})

//Eliminar la película "Avatar"
db.movies.deleteOne({title:"Avatar"})